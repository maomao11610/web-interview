//^以xx开头,$以xx结尾
let reg = /^\d/; //以数字开头
let reg1 = /\d$/; //以数字结尾
let reg2 = /\d/; //只有字符串内包含数字即可
let reg3 = /^\d$/; //以数字开头以数字结尾才算符合
// '\'转义
let reg4 = /^18|29$/; //以18开头或者以29结尾都算
let reg5 = /^(18|29)$/; //18或者29这两数字中一个---括号分组

// []
// \d 在中括号里面的含义仍然是 0-9，这个没有消磁
// [18]：代表的是 1 或者 8 中的任意一个
// [10-29]：代表的是 1 或者 9 或者 0-2
let reg6 = /^[18]$/; //1或者8
//匹配的含义是：1或者0-2或者9
let reg7 = /^[10-29]$/;
//匹配的含义是：1或者0-2或者9或'('或')'
let reg8 = /^[(10-29)]$/;

//{n,m}元字符出现n到m次
let reg9 = /\d{2,4}/; //数字出2到4次

// 实践
// 1.匹配手机还，第一位是1第二位是3-9任意数字，共计11位
let phoneNumber = /^1[3-9]\d{9}$/;
// 2.密码，由数字字母组成 6-16位
let password = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[\d(a-z)(A-Z)]{6,16}$/;
// 3.身份证号 以数字或者X结尾
let cardId =
  /^([1-9]\d{5})((19|20)\d{2})(0[1-9]|10|11|12)(0[1-9]|[1-2]\d|30|31)\d{3}(\d|x)$/i;
